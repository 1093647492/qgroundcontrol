language: cpp

env:
  global:
    - CONFIG="installer"
    - RELEASE_DIR="/tmp/release"
    - DOCKER_USER="auterionci"
    - QGC_CUSTOM_BUILD_FOLDER="custom-example"
    # encrypted DOCKER_PASS
    - secure: "urD4DJ5N7e2AJOfyaWysLigaCc4DwZT7v3NRLTw5339XOXN9388dT65FhW0/HPOisUxOP50ejUKZNhTiGaMAH516xZAj+i0vWWsNYUeF8y5GS76ycuQtafhM6OAyx5zIe7Hsi6GYltDbNgrYzN6W5aMuFKvX0QZJpeEd9qO1D73HQVYeiL83+18U1LBltnJ1KkNDMS9yJIR4th5PnDPKQz4K5LgneswnCkTy0JJbIWTL5nCd9TMedDeQnciMlch9w2GpzgqpfcPCmpVM9/tAzcrFW82esxpbD/knbGBRK9ynV9xJRi7DuXzjLFiQULMWylTdQcR0WhpHmETGTQm1Tdb8Fgtcp7gEqe4DS8unfQoghEyrz0edEwRKs1YoEKXbpQ5ITddUiBk3JJHoBdgeZExDf4katM7IyAxN3Ecr9lvmgDhipiLHAebnV3NoCghj+dWvabd1AfWAhvPpdgtXTUK49AGYVjMYXABACTRmG9nqFdIfXlNNXF5YPrkqmgUBXtyUz0yV1wcvZ1GUXGwruFK1hs7WVGq6BvNitb+tBiQ7nJdpsIN95WhDLhqG3WToYdjhDFBBXmswnjdqpavxWt9zIJZO3HUQ4V122Qq9HmdMYcuWiFN7qwNEHZ6yCZLKS6ry3zh/lmTu6+7j3tu9xMtEG1uKDFumknrsFE+S0Yw="
    - CONTAINER_NAME="builder_container"
    - SH="docker exec -it $CONTAINER_NAME bash -c"
    - SHADOW_BUILD_DIR="/tmp/shadow_build_dir"
    - QGC_CUSTOM_APP_NAME="Custom QGS"
    - QGC_CUSTOM_GENERIC_NAME="Custom Ground Station"
    - QGC_CUSTOM_BINARY_NAME="CustomQGC"
    - QGC_CUSTOM_LINUX_START_SH="$PWD/$QGC_CUSTOM_BUILD_FOLDER/deploy/qgroundcontrol-start.sh"
    - QGC_CUSTOM_APP_ICON="$PWD/resources/icons/qgroundcontrol.png"
    - QGC_CUSTOM_APP_ICON_NAME="qgroundcontrol"
    - GIT_USER="Auterion_CI"
    - GIT_EMAIL="auterion_ci@auterion.com"
    - CCACHE_DIR="$HOME/.ccache"
    - PROJECT_ROOT="$PWD"

cache: ccache

git:
  depth: false
  submodules: false

.template_linux: &template_linux
  os: linux
  dist: bionic
  services: docker
  sudo: required
  install:
    - echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
    - docker pull "$DOCKER_IMAGE"
    - docker run --privileged --name $CONTAINER_NAME --rm -td  -e PROJECT_ROOT="$PROJECT_ROOT" -e CCACHE_DIR="$CCACHE_DIR"
      -e QGC_CUSTOM_APP_NAME="$QGC_CUSTOM_APP_NAME" -e QGC_CUSTOM_GENERIC_NAME="$QGC_CUSTOM_GENERIC_NAME"
      -e QGC_CUSTOM_BINARY_NAME="$QGC_CUSTOM_BINARY_NAME" -e QGC_CUSTOM_LINUX_START_SH="$QGC_CUSTOM_LINUX_START_SH"
      -e QGC_CUSTOM_APP_ICON="$QGC_CUSTOM_APP_ICON" -e QGC_CUSTOM_APP_ICON_NAME="$QGC_CUSTOM_APP_ICON_NAME"
      -e CONFIG="$CONFIG" -e SHADOW_BUILD_DIR="$SHADOW_BUILD_DIR"
      -e QGC_CUSTOM_BUILD_FOLDER="$QGC_CUSTOM_BUILD_FOLDER"
      -v `pwd`:`pwd` -v "$CCACHE_DIR:$CCACHE_DIR" -w `pwd` $DOCKER_IMAGE
  script:
    - $SH 'mkdir -p $SHADOW_BUILD_DIR'
    - $SH 'ccache -z && cd $SHADOW_BUILD_DIR && qmake -r $PROJECT_ROOT/qgroundcontrol.pro CONFIG+=$CONFIG && make -j`nproc --all` && ccache -s'
  before_deploy:
    - mkdir -p $RELEASE_DIR
    # create linux appimage
    - $SH './deploy/create_linux_appimage.sh $PROJECT_ROOT $SHADOW_BUILD_DIR/release $SHADOW_BUILD_DIR/release'
    # copy the AppImage from container to the build host
    - docker cp $CONTAINER_NAME:$SHADOW_BUILD_DIR/release/$QGC_CUSTOM_BINARY_NAME.AppImage $RELEASE_DIR
    - chmod +x $RELEASE_DIR/$QGC_CUSTOM_BINARY_NAME.AppImage
    # rename to add version number to file name
    - mv $RELEASE_DIR/$QGC_CUSTOM_BINARY_NAME.AppImage $QGC_CUSTOM_BINARY_NAME.AppImage
    - zip -r $QGC_CUSTOM_BINARY_NAME.AppImage.zip $QGC_CUSTOM_BINARY_NAME.AppImage
    - mv $QGC_CUSTOM_BINARY_NAME.AppImage.zip $RELEASE_DIR/$QGC_CUSTOM_BINARY_NAME-linux-$TRAVIS_BRANCH-release.AppImage.zip
matrix:
  include:
    # Linux Installer - only built on tags
    - name: Linux Installer
      <<: *template_linux
      env:
        - DOCKER_IMAGE=mavlink/qgc-build-linux
        #to rename the duplicated AuterionGS.AppImage name during Github Release deploy, avoid overwrite
        - APPIMAGE_BINARY_NAME="CustomQGC_linux"
      # We only build tags / deployment - the rest is built in Github Actions
      if: tag IS present
    # Android Installer - only built on tags
    - name: Android Installer
      <<: *template_linux
      env:
        - DOCKER_IMAGE=mavlink/qgc-build-android
      before_script:
      #  - $SH 'ln -snf $QGC_ANDROID_GSTREAMER_PATH ./'
        - $SH 'ln -snf /opt/gstreamer-1.0-android-universal-1.14.4 ./'
      before_deploy:
        - mkdir -p $RELEASE_DIR
        # copy the apk from container to the build host
        - docker cp $CONTAINER_NAME:$SHADOW_BUILD_DIR/release/android-build/build/outputs/apk/android-build-debug.apk $RELEASE_DIR
        # rename to add version number to file name
        - mv $RELEASE_DIR/android-build-debug.apk  $RELEASE_DIR/$QGC_CUSTOM_BINARY_NAME-android-$TRAVIS_BRANCH-release.apk
      # We only build tags / deployment - the rest is built in Github Actions
      if: tag IS present

before_install:
  # inject CI User github OAuth Token stored as env in Travis-CI Project
  - echo -e "machine github.com\n  login $CI_USER_TOKEN" > ~/.netrc
  - git submodule update --init --recursive --force

  # TODO Revisit (from upstream: https://github.com/mavlink/qgroundcontrol/blob/master/.travis.yml
  # fetch entire git repo to properly determine the version
  #- if [ "${CONFIG}" = "installer" ]; then
  #      cd ${TRAVIS_BUILD_DIR} && git fetch --unshallow && git fetch --all --tags;
  #  fi

  # compile threads
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
        export JOBS=$((`cat /proc/cpuinfo | grep -c ^processor`));
    elif [ "${TRAVIS_OS_NAME}" = "osx" ]; then
        export JOBS=$((`sysctl -n hw.ncpu`));
    fi

  # TODO Revisit from upstream
  # Linux needs sdl2 but not android
  #- if [ "${SPEC}" = "linux-g++-64" ]; then
  #      sudo apt-get install -y libsdl2-dev;
  #  fi

.template_deploy: &template_deploy
  provider: releases

  api_key:
    secure: pPLTR3o8zgPwzbDH6C2Z1qHXtDxpSTtPT0gT0N4/Emf1d39vkCT0iQKlZjUQL/7CqunC7/9RTauoc8jZh2oSFpVbf2XaJjdUX/yOf0ZWDGEye/FsWi6v7LkwZUlDzT81SPHCRc0AjHvi4WdEjdT4uMuriisDx+pKVl/cg5Ofwfb3FD2nMug1vGImoLU0ue47Uqxwn5XGc76PD1N7zIzNzYs7w4Y1vFVbHZwNrix6uCReYn9I5StIBiVBMBciZHL1Y3dGIiyfnMod29/jfWuL4VsT/u1HDH0sXDv6d3gvPJWXOuA2LWXEy7N+gopVj/NeEDj1XJT04AN9hzPydllqd++PeSk5a1DUpAiYDd8deQB2VUlV6fHIkE92ljkoSb+pO5TNdcPUCpsXl/CH5LncFnPnJG6PRSPBZSkY9QiehtFEzpQRTCCjNeVnY5RgFyqRfXUHBI3NwylRr76J+JJibIwVMYLDguV73/T2noB3gEMDJZYdz1uv3nry6E4CHmsOZdGkHQi6DsbSxIjTI2XL+fpaKS0xaslchv9iyJBDj2YkRcTSfyxhevumWAvoXMB+yp8eH9LhJauL0SYgTdg5dsWUeFImd4BopFhiEbbuN43e/fxU5kUJb2LrMuc22fLPJjG4g7FJMsywmoebAcg90a66jTD8DMJi3A/Nb0KDCVY=
  overwrite: true
  file_glob: true
  file:
    - $RELEASE_DIR/*
  skip_cleanup: true

deploy:
  - <<: *template_deploy
    on:
      tags: true

notifications:
  slack:
    rooms:
      - secure: uKo8OQ2FMGv9sGv6RnQpntbJIZywofPTPVjNLSz2aqectnj5uaMVQGdGCkzXo+yqplSB8K6Wkg5qo4qpOhjLY1PtM3J8YW567S5e9Vl9SxC3SUYalLkdUGbxySEE2lxKdgn25Jt52Gj/Qw8YYfTG9QThXnUaTNJnC7KEIF+P7HgCYxBKF0OOYosB9T7LV2vk3V1ozuPcYCdHbUPOBASlQqWqTN934qjMY67jsOdqZp/NBrzhIyfO5CqUnyJ/gTh3XYdBlXFkEh0clS5h1biPlsGDqXGPJnGeWN2j0OWfkuSVVXZVO54vl1eUIDANt9w/M5ZtJIkr2MKiBk+zqQMaiCK7iS9wogEz2IpwH1mAyH5+Bjb5dcog/hjSB6GJAAdBOVAGn9oJS22n3P7UJ3q2n7kFr/hOSkZSY/Dn3EhfIcISToL71PHFTZeQuN9JT8oAm/9VloRI/HlOXsVieCnQsnywcxzhb0h6k5P8PAsSx6T3gYTNzOo8AdxtKaySEt135vMyTFp2goa1CTJyHF02aPF/68h5p7WcVvWQbKE4YoiBzRfJVYeDtYJ5+TyJFcEv+WEO6O2i7HLCnAUIQG3JhC1IxAxsaPa8TQLVWEro0XkUAdtvOsKVkPl/5uCwwYhhoXys7dFTDm5YwFezDor+suQtYnt+CSxaMMdGdRi6z8s=
    on_success: change
    on_failure: always
