#
# QGroundControl linux build environment
#

FROM centos:7
MAINTAINER Daniel Agar <daniel@agar.ca>

ARG QT_VERSION=5.12.4

ENV DISPLAY :99

ENV QMAKESPEC linux-g++-64

ENV QT_PATH /opt/Qt
ENV QT_DESKTOP $QT_PATH/${QT_VERSION}/gcc_64

ENV PATH /usr/lib/ccache:$QT_DESKTOP/bin:$PATH
ENV SHADOW_BUILD_DIR=/tmp/shadow_build_dir

RUN yum -y install epel-release
RUN yum -y upgrade
RUN yum -y groupinstall \
        'Development Tools'

RUN yum -y install\
        ca-certificates \
        ccache \
        cmake \
        curl \
        espeak \
        git \
        libXext-devel \
        SDL2-devel \
        SDL2 \
        mesa-libGL-devel \
        mesa-libGLU-devel \
        libudev-devel \
        make \
        pkgconfig \
        speech-dispatcher \
        wget \
        kmod \
        rsync \
        openssl \
        openssl-devel \
        libXScrnSaver \
        fuse \
        fuse-devel \
        freetype.i686 \
        freetype \
        freetype-devel \
        fontconfig \
        fontconfig-devel \
        libstdc++ \
        libX11

# Install gstreamer dependencies
RUN yum -y --skip-broken install gstreamer1*

COPY deploy/scripts/extract-qt-installer.sh /tmp/qt/

# Download Qt toolchains
RUN curl -Lo /tmp/qt/installer.run "https://download.qt.io/archive/qt/$(echo "${QT_VERSION}" | cut -d. -f 1-2)/${QT_VERSION}/qt-opensource-linux-x64-${QT_VERSION}.run"

# Unpack Qt toolchains & clean
RUN QT_PACKAGE_VER="$(echo "${QT_VERSION}" | tr -d .)" QT_CI_PACKAGES=qt,qt.qt5.${QT_PACKAGE_VER},qt.qt5.${QT_PACKAGE_VER}.gcc_64,qt.qt5.${QT_PACKAGE_VER}.qtcharts,qt.qt5.${QT_PACKAGE_VER}.qtvirtualkeyboard,qt.qt5.5124.qtnetworkauth /tmp/qt/extract-qt-installer.sh /tmp/qt/installer.run "$QT_PATH" \
        && find "${QT_PATH}" -mindepth 1 -maxdepth 1 ! -name "${QT_VERSION}" -exec echo 'Cleaning Qt SDK: {}' \; -exec rm -r '{}' \; \
        && rm -rf /tmp/*

# create user with id 1001 (jenkins docker workflow default)
RUN useradd --shell /bin/bash -u 1001 -c "" -m user && usermod -a -G dialout user

# create and start as LOCAL_USER_ID
COPY deploy/scripts/entrypoint.sh /usr/local/bin/entrypoint.sh
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

CMD ["/bin/bash"]

ENV DEBIAN_FRONTEND teletype

